/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '../../../app/common/collapsible-well.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/change_detection';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '@angular/core/src/linker/view_container';
import * as import9 from '../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import10 from '@angular/core/src/linker/template_ref';
import * as import11 from '@angular/common/src/directives/ng_if';
export var Wrapper_CollapsibleWellComponent = (function () {
    function Wrapper_CollapsibleWellComponent() {
        this._changed = false;
        this.context = new import0.CollapsibleWellComponent();
    }
    Wrapper_CollapsibleWellComponent.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_CollapsibleWellComponent.prototype.ngOnDestroy = function () {
    };
    Wrapper_CollapsibleWellComponent.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_CollapsibleWellComponent.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_CollapsibleWellComponent.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_CollapsibleWellComponent.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_CollapsibleWellComponent;
}());
var renderType_CollapsibleWellComponent_Host = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.None, [], {});
var View_CollapsibleWellComponent_Host0 = (function (_super) {
    __extends(View_CollapsibleWellComponent_Host0, _super);
    function View_CollapsibleWellComponent_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_CollapsibleWellComponent_Host0, renderType_CollapsibleWellComponent_Host, import5.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways);
    }
    View_CollapsibleWellComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'collapsible-well', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_CollapsibleWellComponent0(this.viewUtils, this, 0, this._el_0);
        this._CollapsibleWellComponent_0_3 = new Wrapper_CollapsibleWellComponent();
        this.compView_0.create(this._CollapsibleWellComponent_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._CollapsibleWellComponent_0_3.context);
    };
    View_CollapsibleWellComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.CollapsibleWellComponent) && (0 === requestNodeIndex))) {
            return this._CollapsibleWellComponent_0_3.context;
        }
        return notFoundResult;
    };
    View_CollapsibleWellComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._CollapsibleWellComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.detectChanges(throwOnChange);
    };
    View_CollapsibleWellComponent_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_CollapsibleWellComponent_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_CollapsibleWellComponent_Host0.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, ctx) {
        if (((nodeIndex == 0) && (ngContentIndex == 0))) { }
        if (((nodeIndex == 0) && (ngContentIndex == 1))) { }
    };
    return View_CollapsibleWellComponent_Host0;
}(import1.AppView));
export var CollapsibleWellComponentNgFactory = new import7.ComponentFactory('collapsible-well', View_CollapsibleWellComponent_Host0, import0.CollapsibleWellComponent);
var styles_CollapsibleWellComponent = [];
var renderType_CollapsibleWellComponent = import3.createRenderComponentType('', 2, import4.ViewEncapsulation.None, styles_CollapsibleWellComponent, {});
export var View_CollapsibleWellComponent0 = (function (_super) {
    __extends(View_CollapsibleWellComponent0, _super);
    function View_CollapsibleWellComponent0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_CollapsibleWellComponent0, renderType_CollapsibleWellComponent, import5.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways);
    }
    View_CollapsibleWellComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._text_0 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_1 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray2(2, 'class', 'well pointable'), null);
        this._text_2 = this.renderer.createText(this._el_1, '\n  ', null);
        this._el_3 = import3.createRenderElement(this.renderer, this._el_1, 'h4', import3.EMPTY_INLINE_ARRAY, null);
        this._text_4 = this.renderer.createText(this._el_3, '\n    ', null);
        this.projectNodes(this._el_3, 0);
        this._text_5 = this.renderer.createText(this._el_3, '\n  ', null);
        this._text_6 = this.renderer.createText(this._el_1, '\n  ', null);
        this._anchor_7 = this.renderer.createTemplateAnchor(this._el_1, null);
        this._vc_7 = new import8.ViewContainer(7, 1, this, this._anchor_7);
        this._TemplateRef_7_5 = new import10.TemplateRef_(this, 7, this._anchor_7);
        this._NgIf_7_6 = new import9.Wrapper_NgIf(this._vc_7.vcRef, this._TemplateRef_7_5);
        this._text_8 = this.renderer.createText(this._el_1, '\n', null);
        this._text_9 = this.renderer.createText(parentRenderNode, '\n  ', null);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_1, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_1));
        this.init(null, (this.renderer.directRenderer ? null : [
            this._text_0,
            this._el_1,
            this._text_2,
            this._el_3,
            this._text_4,
            this._text_5,
            this._text_6,
            this._anchor_7,
            this._text_8,
            this._text_9
        ]), [disposable_0]);
        return null;
    };
    View_CollapsibleWellComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import10.TemplateRef) && (7 === requestNodeIndex))) {
            return this._TemplateRef_7_5;
        }
        if (((token === import11.NgIf) && (7 === requestNodeIndex))) {
            return this._NgIf_7_6.context;
        }
        return notFoundResult;
    };
    View_CollapsibleWellComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_7_0_0 = this.context.visible;
        this._NgIf_7_6.check_ngIf(currVal_7_0_0, throwOnChange, false);
        this._NgIf_7_6.ngDoCheck(this, this._anchor_7, throwOnChange);
        this._vc_7.detectChangesInNestedViews(throwOnChange);
    };
    View_CollapsibleWellComponent0.prototype.destroyInternal = function () {
        this._vc_7.destroyNestedViews();
    };
    View_CollapsibleWellComponent0.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 7)) {
            return new View_CollapsibleWellComponent1(this.viewUtils, this, 7, this._anchor_7, this._vc_7);
        }
        return null;
    };
    View_CollapsibleWellComponent0.prototype.handleEvent_1 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.context.toggleContent() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    return View_CollapsibleWellComponent0;
}(import1.AppView));
var View_CollapsibleWellComponent1 = (function (_super) {
    __extends(View_CollapsibleWellComponent1, _super);
    function View_CollapsibleWellComponent1(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_CollapsibleWellComponent1, renderType_CollapsibleWellComponent, import5.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_CollapsibleWellComponent1.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createTemplateAnchor(null, null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : []), null);
        return null;
    };
    View_CollapsibleWellComponent1.prototype.visitRootNodesInternal = function (cb, ctx) {
        this.visitProjectedNodes(1, cb, ctx);
        cb(this._el_0, ctx);
    };
    return View_CollapsibleWellComponent1;
}(import1.AppView));
//# sourceMappingURL=collapsible-well.component.ngfactory.js.map